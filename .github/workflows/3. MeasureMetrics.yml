name: Code Metrics Analysis

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  analyze:
    name: Code Metrics Analysis
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Required for proper analysis
    
    # Python setup for analysis tools
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    
    # Install analysis tools
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install radon lizard
    
    # Analyze code complexity using Radon
    - name: Analyze with Radon
      run: |
        echo "=== Cyclomatic Complexity ==="
        radon cc . -a -s
        echo "=== Maintainability Index ==="
        radon mi . -s
        echo "=== Raw Metrics (LOC, SLOC, etc) ==="
        radon raw . -s
    
    # Analyze with Lizard for additional metrics
    - name: Analyze with Lizard
      run: |
        lizard . --CCN 10 --length 100 --arguments 5
    
    # Optional: Store results as artifacts
    - name: Generate detailed report
      run: |
        mkdir -p metrics
        radon cc . -a -s --json > metrics/complexity.json
        radon raw . --json > metrics/raw_metrics.json
        lizard . --xml > metrics/lizard_report.xml
    
    - name: Upload metrics results
      uses: actions/upload-artifact@v4
      with:
        name: code-metrics
        path: metrics/